<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="cmsDgvRightClick.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIACXBgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgDAAAAa6xYVAAAAaRQ
        TFRFLzY9pKWn1tbWqqytQEVLO0FH0NDQ09PTQUZMfX+ChYeKtba3vLy9TlNYV1tgkZOVmJqcMDc+xcbG
        ysvLMjlAZmpub3J2bnJ1qausg4aIu7u8VVpel5mbycrKZWhsbnF0cXR3Zmlto6SmsLGyaGtvXGBkOkBG
        YmZqxsfHe36By8zMMTg/nJ6gtLW2aW1wTVFWc3Z6NTtCzs7PkJKU0tLSqKmrxMXFsLGzeHt+g4WIP0RK
        1NTUbHBzSk9Uvb2+hoiLkpSWgoWHXGBlv7/Aubq7yMnJk5WXU1hdn6GiXWFllpiaycnJ0dHRNz1Dra6v
        bXB0foGD1dXVREpPq6ytjY+RQkdNtre4xMTFiYuOyMjJY2drm52fUVZaa25yoqOkaWxwwcLCp6iqOT9F
        z8/QPkRJen2AgYOGs7S1eXx/y8vLuLm6S1BVoqOlU1dcj5GTcXR4lZeYiIuNrq+wf4GElJaYx8fIpqep
        PUNJf4KFt7i5jY+Sw8PEoKKjOD5Ez8/PsrO0UFVafH+CioyPpaaoPEJIT1RZjI6RVlpfvr+/mpydZ2tu
        zs7Odeo75gAAAAFvck5UAc+id5oAAAShSURBVHja7dv7W1RVFMbxYcKo7OKQmTe6kIWFWRpaSRSVmSka
        WGkZmVmmZVnZ/WL3e/905i50hHftdZ5nhmft3ffz61nnzNovCu8zDK0WAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAA/qcG2qarjFsH232xvOdfcbW9zdA1lQdwbW6d6yoPYGVunevrDuCG/D43Vh3ATfl9
        VtUcQGc4v8/NqysO4BbPQmsqDmDAs5CsAuUHkCsBiawC5QeQLQGJqgLlB5AtAYmqAsUH4CgBiagCxQfg
        KAHJqjoD8JSARFSB0gNwlYDk1ioDcJWAZG2NAfhKQDI0WGEAzhKQrKswAGcJSNbXF4C7BCQbqgvAXQKS
        jbUF4C8BycgSVaDoAG5rutbtS4Q4aLjDetid1p3LE8CoWO0utfPahi+wyQrg7uU5pOEeVQLGNosLQw2/
        MsEDuFdsdt/4FrX0umavEDyA+8VmA62taun1zV4hdgAPqM0ebG3brq5taPQSsQN4SCw2saLV2qG23tjo
        JUIH0NkpFnv4wsVH1NYj49UEIEvAoxcu7ppUVx+rJoBRtdjUP1fVN8j2jloCkCXg8YuXn1BrT+yqJABV
        AtrTFy/LHxHtJysJQP4bfypdf1pd311HAPIr/EwnDeyRiz9bRQCqBLT3/jvwnFx8Xw0ByBKw8OZ3Z7+a
        2O+vAnEDkCVg5sB/I3vl5v4qEDeAUbXVwYWR5+Xm/ioQNgBZAtqzCzMH5Iy/CoQNQJaAuUOXhl6Qq7ur
        QNgAZAm4/Ie8TMlfBaIGoGvei5dNvTQnx7xVIGoAsgR0fwrisBzzVoGoARxROw13jb0sd3/FWQWCBnBU
        7vRq19y8Xv61ogM4Jnd6vXvwuBx8o+QATrypVtq+rXtyn1x+4q2CAzgpV7qy4o3p7d8uOIBTcqXTV0yO
        vyNH3y03gDNyo8lFv/h6T6//frEBnJUbrVw0+4Fe/8NiA5AloP3RotkTE3LYVQUiBqBLQHt+8fQ5Pe2p
        AhED0CXg+BLTH+v9PVUgYAC6BDTlqQIBAzjpPV+eowoEDOCU93h5jioQL4Az3tN55KtAvADOeg/n8UmB
        ARzxHs7j02wVCBfAUe/ZfLYWF8Ax79F8PistgN6VgGTm88IC6GEJSL4oLIAeloDky7IC6GkJSObtVwwW
        wFe9D2BPUQF83fsAMlUgVgBj3lM1YVeBWAF8048A7CoQKoDz3/YjALsKhArgdD/On6kCoQL4rj8BmFUg
        UgBTc94jNfR9IQFYJeCHQZv5J+bThQRglIDJ3IeeOiPGOTZ3igjAKgGHs3ebP0E3FRGAdYQfs3evsQ7y
        UwkBmCUg/4dQ52eM22d+LiAAqwQMO+4/aJ1ktoAArBKwxXH/rHUS/T0kTABmCfB89vmQ2SJ+CR+AVQIu
        fT7csts6ynT4AKx3As65nvCrdRRZBaIEYL4T4Pu402/WI2QViBKA2WOmfM/YaT1DVYEgAZgl4HfnQ/6w
        zqKqQJAAzHcC8r/hTP40/w/Mhg7AfCdgzPmQ1X9ZTxFVIEgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAACONvvWivIon1XSwAAAAASUVORK5CYII=
</value>
  </data>
</root>